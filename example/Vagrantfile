ENV['VAGRANT_EXPERIMENTAL'] = 'typed_triggers'

Vagrant.configure(2) do |config|
  config.vm.box = 'nixos-23.05-amd64'

  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provider 'hyperv' do |hv, config|
    hv.vmname = "#{File.basename(File.dirname(File.dirname(__FILE__)))}-example"
    hv.linked_clone = true
    hv.memory = 2048
    hv.cpus = 2
    hv.enable_virtualization_extensions = true # nested virtualization.
    hv.vlan_id = ENV['HYPERV_VLAN_ID']
    # see https://github.com/hashicorp/vagrant/issues/7915
    # see https://github.com/hashicorp/vagrant/blob/10faa599e7c10541f8b7acf2f8a23727d4d44b6e/plugins/providers/hyperv/action/configure.rb#L21-L35
    config.vm.network :private_network, bridge: ENV['HYPERV_SWITCH_NAME'] if ENV['HYPERV_SWITCH_NAME']
    # configure the hyperv vm.
    config.trigger.before :'VagrantPlugins::HyperV::Action::StartInstance', type: :action do |trigger|
      trigger.ruby do |env, machine|
        system(
          'PowerShell',
          '-NoLogo',
          '-NoProfile',
          '-NonInteractive',
          '-ExecutionPolicy',
          'Bypass',
          '-Command',
          <<~COMMAND
            $vmName = '#{machine.provider_config.vmname}'
            # enable all the integration services.
            # NB because, for some reason, sometimes "Guest Service Interface" is not enabled.
            Get-VMIntegrationService $vmName | Enable-VMIntegrationService
            # configure the boot loader to boot from disk.
            $bootDrive = Get-VMHardDiskDrive $vmName | Select-Object -First 1
            Set-VMFirmware $vmName -BootOrder $bootDrive
          COMMAND
        )
      end
    end
  end

  config.vm.provision 'shell', inline: 'echo "firmware type is $([ -d /sys/firmware/efi ] && echo \'UEFI\' || echo \'BIOS\')"', name: 'firmware type'
  config.vm.provision 'shell', inline: 'echo "machine-id is $(cat /etc/machine-id)"'
  config.vm.provision 'shell', inline: 'cat /etc/os-release', name: 'os-release'
  config.vm.provision 'shell', inline: 'nixos-version', name: 'nixos-version'
  config.vm.provision 'shell', inline: 'sfdisk -l', name: 'disk partitions'
  config.vm.provision 'shell', inline: 'lsblk -x KNAME -o KNAME,SIZE,TRAN,SUBSYSTEMS,FSTYPE,UUID,LABEL,MODEL,SERIAL', name: 'block devices'
  config.vm.provision 'shell', inline: 'df -h', name: 'disk space usage'
  config.vm.provision 'shell', inline: 'nix-store --query --requisites /run/current-system', name: 'package list'
end
